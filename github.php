<?php
// WDE Github component v0.1

// This file is generated by Composer
require_once __DIR__ . '/vendor/autoload.php';

// Ugly Angular Fix for seralized POST values
$_POST = json_decode(file_get_contents('php://input'),true);

$client = new \Github\Client();

if( $_POST ) {
    $data['POST'] = $_POST;
    
    if( $_POST['login'] ) {
        try {
            $_SESSION['client'] = $client->authenticate( $_POST['username'], $_POST['password'] );
            $data['repositories'] = $client->api('user')->repositories( $_POST['username'] );
            
            $data['status']['success'] = "Login Successful";
        } catch( Exception $e ) {
            $data['status']['error'] = $e->getMessage();
        }
    }    
    
    if( $_POST['newRepo'] ) {
        try {
            $repo = new \Github\Api\Repo( $_SESSION['client'] );
            $repo->create(
                $_POST['repoName'],
                $_POST['repoDescription'],
                $_POST['repoSite']
            );
    
            $data['status']['success'] = "Repo {$_POST['repoName']} created succesfully";
        } catch( Exception $e ) {
            $data['status']['error'] = $e->getMessage();
        }
    }

    echo json_encode( $data );
    die();
}

?>
<!DOCTYPE html>
<html ng-app="github">
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
    <style>
        body { font-family: verdana; }
        div { border: solid 1px black; }
        table { width: 100%; }
        .block {
            display: block;
        }
    </style>
</head>    

<!-- User login -->
<div ng-controller="login">
    <div ng-hide="toggle.data.login">
        <div class="block">
            <input type="text" placeholder="username" ng-model="username">
        </div>
        <div class="block">
            <input type="password" placeholder="password" ng-model="password">
        </div>
        <button ng-click="login()">Submit</button>
    </div>
    
    <div ng-show="toggle.data.login">
        Logged in as {{username}}
    </div>
</div>
<!-- User login -->

<!-- User Repos -->
<div id="repos" ng-controller="repos">
    <div ng-if="toggle.data.login">
        Your Repos:<br>
        <table>
            <th>Name</th>
            <th>Clone</th>
            <tbody ng-repeat="repo in shared.data.repos">
                <td><a href="{{repo.html_url}}">{{repo.name}}</a></td>
                <td><a href="{{repo.clone_url}}">Clone</a></td>
            </tbody>
        </table>
        <button ng-click="toggle.on('newRepo')">Create a New Repo</button>
        <div ng-if="toggle.data.newRepo">
            <input type="text" placeholder="Repo Name" ng-model="repoName"><br>
            <input type="text" placeholder="Repo Description" ng-model="repoDescription"><br>
            <input type="text" placeholder="Repo Website" ng-model="repoSite"><br>
            <button>Create</button>
        </div>
    </div>
</div>
<!-- User Repos -->

</html>

<script>
    // Angular
    var thisFile = "github.php";
    var app = angular.module( 'github', [] );
    
    // Standard Marin Library Bullshit
    function cl(s) { console.log(s); }    
    
    app.factory("toggle", function() {
        var data = {};
        
        function tog( s ) {
            data[s] = ( data[s] ? false: true );
        }
        
        function on( s ) {
            cl( data );
            data[s] = true;
        }
        
        function off( s ) {
            data[s] = false;
        }
        
        return {
            data: data,
            tog: tog,
            on: on,
            off: off
        };
    });
    
    app.factory("shared", function() {
        var data = {};
        
        function setData( s, obj ) {
            data[s] = obj;
        }
        
        return {
            data: data,
            setData: setData
        };
    });    
    // Standard Marin Library Bullshit
    
    app.controller( 'repos', function( $scope, $http, toggle, shared ){ 
        $scope.toggle = toggle;
        $scope.shared = shared;
        
        $scope.createRepo = function() {
            $http.post( thisFile, {
                newRepo: true,
                repoName: $scope.repoName,
                repoDescription: $scope.repoDescription,
                repoSite: $scope.repoSite,
            }).then( function( response ){
                cl( response );
            });
        }
    })
    
    app.controller( 'login', function( $scope, $http, toggle, shared ){ 
        $scope.toggle = toggle;
        $scope.shared = shared;
        
        $scope.login = function() {
            cl($scope.username);
            $http.post( thisFile, {
                login: true,
                username: $scope.username,
                password: $scope.password,
            }).then( function( response ){
                cl( response );
                if( response.data.status.success ) {
                    $scope.shared.setData('repos', response.data.repositories );
                    $scope.toggle.on("login");
                }
                if( response.data.status.error )
                    alert( response.data.status.error );
            });
        }
    })    
</script>
